<!--
// Copyright (c) 2025 Nishan Hossepian. All rights reserved.              
// Free to use, modify, and distribute under the terms of the MIT license.
// See the LICENSE file in the project root for full license information.
-->
<UserControl
    x:Class="OpenSilverPdfViewer.Controls.PageViewer"
    x:Name="pvCtrlInternal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:native="clr-namespace:CSHTML5.Native.Html.Controls;assembly=OpenSilver"    
    xmlns:conv="clr-namespace:OpenSilverPdfViewer.Utility"
    xmlns:local="clr-namespace:OpenSilverPdfViewer.Controls"
    MouseWheel="PageView_MouseWheel">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/OpenSilverPdfViewer;component/Styles/ScrollBarStyles.xaml"/>
                <ResourceDictionary Source="/OpenSilverPdfViewer;component/Styles/ToolBarButtonStyles.xaml"/>
                <ResourceDictionary Source="/OpenSilverPdfViewer;component/Styles/PageZoomCtrlStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <conv:IntToEnabledConverter x:Key="IntToEnabledConverter"/>
            <conv:ViewModeToCheckedConverter x:Key="ViewModeToCheckedConverter"/>
            <SolidColorBrush x:Key="RulerBrush" Color="#FF343434"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="RulerStates">
                <VisualState x:Name="RulerOn">
                    <Storyboard 
                        Completed="RulerOnStoryboard_Completed">
                        <DoubleAnimation 
                            Storyboard.TargetName="horzRulerBorder"
                            Storyboard.TargetProperty="(FrameworkElement.Height)"
                            Duration="0:0:0.2"
                            To="30"/>
                        <DoubleAnimation 
                            Storyboard.TargetName="vertRulerBorder"
                            Storyboard.TargetProperty="(FrameworkElement.Width)"
                            Duration="0:0:0.2"
                            To="30"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="RulerOff">
                    <Storyboard 
                        Completed="RulerOffStoryboard_Completed">
                        <DoubleAnimation 
                            Storyboard.TargetName="horzRulerBorder"
                            Storyboard.TargetProperty="(FrameworkElement.Height)"
                            Duration="0:0:0.2"
                            To="0"/>
                        <DoubleAnimation 
                            Storyboard.TargetName="vertRulerBorder"
                            Storyboard.TargetProperty="(FrameworkElement.Width)"
                            Duration="0:0:0.2"
                            To="0"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border 
                    x:Name="horzRulerBorder"
                    Grid.Row="0" 
                    Grid.ColumnSpan="3" 
                    Background="{StaticResource RulerBrush}"
                    BorderBrush="{StaticResource CMSDarkBorderBrush}"
                    Height="0">
                    <Canvas x:Name="horzRuler"/>
                </Border>
                <Border 
                    x:Name="vertRulerBorder"
                    Grid.Row="1" 
                    Grid.RowSpan="2" 
                    Background="{StaticResource RulerBrush}"
                    BorderBrush="{StaticResource CMSDarkBorderBrush}"
                    Width="0">
                    <Canvas x:Name="vertRuler"/>
                </Border>
                <Grid 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    SizeChanged="Preview_SizeChanged"
                    Margin="10,10,10,3">
                    <Canvas 
                        x:Name="pageImageCanvas" 
                        ClipToBounds="True"
                        Background="Transparent">
                    </Canvas>
                    <native:HtmlCanvas 
                        x:Name="pageElementCanvas" 
                        ClipToBounds="True"/>
                    <native:HtmlPresenter>
                        <canvas id="pageViewCanvas"/>
                    </native:HtmlPresenter>
                </Grid>
                <ScrollBar 
                    x:Name="pageScrollBarHorz"
                    Style="{StaticResource CMSScrollBarHorizontal}"
                    Scroll="PageScrollBars_Scroll"
                    Margin="7,0,0,3"
                    Grid.Row="2"
                    Grid.Column="1"
                    Orientation="Horizontal"
                    Minimum="0"
                    Maximum="0"
                    Value="0"/>
                <ScrollBar 
                    x:Name="pageScrollBarVert"
                    Style="{StaticResource CMSScrollBarVertical}"
                    Scroll="PageScrollBars_Scroll"
                    Grid.Row="1"
                    Grid.Column="2"
                    Orientation="Vertical"
                    Margin="0,7,3,0"
                    Minimum="0"
                    Maximum="0"
                    Value="0"/>
            </Grid>
        </Border>
        <!-- Toolbar -->
        <Border 
            Grid.Row="1"
            Padding="10"
            BorderBrush="{StaticResource CMSSolidBorderBrush}"
            BorderThickness="0,1,0,0"
            Background="{StaticResource ToolbarBackgroundBrush}">
            <Grid VerticalAlignment="Center">
                <local:ZoomViewCtrl 
                    Width="175"
                    IsEnabled="{Binding CanZoom, ElementName=pvCtrlInternal}"
                    ZoomLevel="{Binding PageZoomValue, Mode=TwoWay}"
                    ZoomSelection="{Binding PageZoomLevel, Mode=TwoWay}"
                    HorizontalAlignment="Left"/>
                <local:PageNavigationCtrl 
                    HorizontalAlignment="Center"
                    NavigationPage="{Binding CurrentPage, Mode=TwoWay}"
                    NavigationMode="{Binding ViewMode, ElementName=pvCtrlInternal}"
                    PageCount="{Binding PageCount}"/>
                <StackPanel
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <local:ToolBarToggleButton
                        IsEnabled="{Binding CurrentPage, Converter={StaticResource IntToEnabledConverter}}"
                        Click="RulerToggle"
                        Margin="0,0,5,0">
                        <Image
                            Width="16"
                            Source="/OpenSilverPdfViewer;component/Assets/ruler2.png"/>
                    </local:ToolBarToggleButton>
                    <local:ToolBarToggleButton
                        Name="pageViewBtn"
                        Click="ViewModeBtn_Click"
                        IsEnabled="{Binding CurrentPage, Converter={StaticResource IntToEnabledConverter}}"
                        IsChecked="{Binding ViewMode, ElementName=pvCtrlInternal, Converter={StaticResource ViewModeToCheckedConverter}, ConverterParameter={x:Static conv:ViewModeType.PageView}}"
                        CornerRadius="3,0,0,3">
                        <Image
                            Width="20"
                            Source="/OpenSilverPdfViewer;component/Assets/pageview.png"/>
                    </local:ToolBarToggleButton>
                    <local:ToolBarToggleButton
                        Name="thumbViewBtn"
                        Click="ViewModeBtn_Click"
                        IsEnabled="{Binding CurrentPage, Converter={StaticResource IntToEnabledConverter}}"
                        IsChecked="{Binding ViewMode, ElementName=pvCtrlInternal, Converter={StaticResource ViewModeToCheckedConverter}, ConverterParameter={x:Static conv:ViewModeType.ThumbnailView}}"
                        CornerRadius="0,3,3,0">
                        <Image
                            Width="20"
                            Source="/OpenSilverPdfViewer;component/Assets/thumbview.png"/>
                    </local:ToolBarToggleButton>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
